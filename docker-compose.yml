version: "3.9"

services:
    user_backend:
        build: user_backend
        image: user_backend
        env_file:
            - ./user_backend/.env
        volumes:
            - ./user_backend/src:/src
            - ./user_backend/media:/media
            - ./user_backend/static:/static
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        depends_on:
            db:
                condition: service_healthy
        networks:
            - ecg_network

    yolo-detector:
        build: detector
        container_name: yolo-detector
        command: uvicorn main:app --reload --host 0.0.0.0 --port=8010
        ports:
            - "8010:8010"
        volumes:
            - ./detector/src:/src
            - ./detector/media:/media
        env_file:
            - ./detector/src/.env
        networks:
            - ecg_network

    db:
        image: postgres:14-alpine
        environment:
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        ports:
            - "5432:5432"
        expose:
            - 5432
        volumes:
            - postgres_db:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - ecg_network

volumes:
  postgres_db:
    name: postgres_db

networks:
    ecg_network:
        driver: bridge
